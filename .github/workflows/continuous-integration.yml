name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.4.1

      - name: ‚ôªÔ∏è Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: ‚ôªÔ∏è Yarn packages cache
        id: yarn-cache
        uses: actions/cache@v3.0.8
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ‚öôÔ∏è Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: ‚ôªÔ∏è Gatsby cache
        uses: actions/cache@v3.0.8
        id: gatsby-cache
        with:
          path: |
            .cache
            public/
          key: ${{ runner.os }}-cache-gatsby-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-gatsby-

      - name: üèóÔ∏è Build
        run: |
          mkdir -p .cache
          yarn build
        env:
          NODE_ENV: production
          CI: true

      - name: ‚ôªÔ∏è Get Jest cache dir
        id: jest-cache-dir-path
        run: |
          JEST_CACHE_DIR=$(yarn jest --showConfig | grep -oP '(?<="cacheDirectory": ")[^"]+(?=")')
          echo "::set-output name=dir::$JEST_CACHE_DIR"

      - name: ‚ôªÔ∏è Test cache
        uses: actions/cache@v3.0.8
        with:
          path: |
            ${{ steps.jest-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-test-

      - name: üß™ Test
        run: yarn test
        env:
          CI: true

      - name: üö¶ Lighthouse
        uses: treosh/lighthouse-ci-action@7.0.0
        with:
          # no urls needed, since it uses local folder to scan .html files
          configPath: ".github/workflows/lighthouserc.json"
          temporaryPublicStorage: true

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.4.1

      - name: ‚ôªÔ∏è Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: ‚ôªÔ∏è Yarn packages cache
        id: yarn-cache
        uses: actions/cache@v3.0.8
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ‚öôÔ∏è Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: ‚ôªÔ∏è Gatsby cache
        uses: actions/cache@v3.0.8
        id: gatsby-cache
        with:
          path: |
            .cache
            public/
          key: ${{ runner.os }}-cache-gatsby-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-gatsby-

      - name: üèóÔ∏è Build
        run: |
          mkdir -p .cache
          yarn build
        env:
          NODE_ENV: production
          CI: true

      - name: üöÄ Release to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üî≠ Check the site is up
        uses: srt32/uptime@master
        with:
          url-to-hit: "https://hoverkraft.cloud"
          expected-statuses: "200"

      - name: üö¶ Audit URLs using Lighthouse
        id: lighthouse-ci-audit
        uses: treosh/lighthouse-ci-action@7.0.0
        with:
          urls: |
            https://hoverkraft.cloud
          temporaryPublicStorage: true

      - name: üö¶ Update Lighthouse badge
        env:
          LIGHTHOUSE_LINKS: ${{ steps.lighthouse-ci-audit.outputs.links }}
          LIGHTHOUSE_RESULTS_PATH: ${{ steps.lighthouse-ci-audit.outputs.resultsPath }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node .github/workflows/updateLighthouseReport.js;

          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          echo `git add README.md && git commit -m "docs: Update Lighthouse badge"`
          git push --follow-tags origin master
